import csv
import requests
from pyquery import PyQuery as pq
import json
import re

index_url = 'https://www.coursera.org/recommendations'

resps = pq(index_url)
data_items = resps('div.mega-menu-container ul li')

for item in data_items.items():
    href = item('div a').attr('href')
    print(href)
    all_data = set()
    if href == None:
        continue
    href = 'https://www.coursera.org'+href
    index_doc = pq(href)
    data_index = index_doc('div.rc-BrowseCarousel.subdomain-carousel div.slick-track span[data-reactid]').items()
    for i in data_index:
        name = i.text()
        all_data.add(name)
    for j in all_data:
        print(j)
        url = 'https://www.coursera.org/graphqlBatch'
        header = {'accept':'*/*',
        'Accept-Encoding':'gzip, deflate, br',
        'Accept-Language':'zh-CN,zh;q=0.9,en-GB;q=0.8,en;q=0.7',
        'Connection':'keep-alive',
        'Content-Length':'351',
        'content-type':'application/json',
        'Cookie':'CSRF3-Token=1565793961.nQShdEZ9lpfJBudX; __204u=9647389299-1564929961888; __204r=; _hjid=818e68d6-d8aa-4088-b41a-620635de3db5; __400v=6c1d9e03-3a71-4662-fc4a-4318903c7194; _dc_gtm_UA-28377374-1=1; _dc_gtm_UA-86370891-1=1; maId={"cid":"51a926e3d3cf219270412c574a40f28b","sid":"c32f469c-1644-4414-be2a-5a2f0c81e56e"}; _fbp=fb.1.1564929969805.1324753213; _ga=GA1.2.1442998390.1564929969; _gid=GA1.2.2011859856.1565019480; _tq_id.TV-63455409-1.39ed=174794bb3855305c.1564929969.0.1565020377..; stc113717=env:1565019480%7C20190905153800%7C20190805162256%7C8%7C1030880:20200804155256|uid:1564929970034.1710902248.794805.113717.1478931705.:20200804155256|srchist:1030880%3A1565019480%3A20190905153800:20200804155256|tsa:1565019480501.1023111748.0476274.13577858229100692:20190805162256; __400vt=1565020377443',
        'Host':'www.coursera.org',
        'Origin':'https://www.coursera.org',
        'Referer':'https://www.coursera.org/learn/terrorism',
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36',
        }

        name = '{}'.format('personal-development').lower().replace(' ','-')
        print(name)
        data = [{"operationName":"catalogResultQuery","variables":{"skip":False,"limit":1,"facets":["skillNameMultiTag","jobTitleMultiTag","difficultyLevelTag","languages","entityTypeTag","partnerMultiTag","categoryMultiTag","subcategoryMultiTag:{}".format(name)],"sortField":"","start":"0"},"query":"query catalogResultQuery($facets: [String!]!, $start: String!, $skip: Boolean = false, $sortField: String, $limit: Int) {\n  CatalogResultsV2Resource @skip(if: $skip) {\n    browseV2(facets: $facets, start: $start, limit: $limit, sortField: $sortField) {\n      elements {\n        label\n        entries {\n          id\n          score\n          courseId\n          specializationId\n          onDemandSpecializationId\n          resourceName\n          __typename\n        }\n        domainId\n        subdomainId\n        facets\n        courses {\n          elements {\n            ...FullCourseFragment\n            __typename\n          }\n          __typename\n        }\n        s12ns {\n          elements {\n            ...FullS12nFragment\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      paging {\n        total\n        next\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment FullCourseFragment on CoursesV1 {\n  ...LightweightCourseFragment\n  courseDerivativesV2 {\n    skillTags {\n      skillName\n      relevanceScore\n      __typename\n    }\n    avgLearningHoursAdjusted\n    commentCount\n    averageFiveStarRating\n    ratingCount\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightCourseFragment on CoursesV1 {\n  id\n  slug\n  name\n  photoUrl\n  s12nIds\n  level\n  workload\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment FullS12nFragment on OnDemandSpecializationsV1 {\n  ...LightweightS12nFragment\n  derivativeV2 {\n    averageFiveStarRating\n    avgLearningHoursAdjusted\n    __typename\n  }\n  courses {\n    elements {\n      courseDerivativesV2 {\n        skillTags {\n          skillName\n          relevanceScore\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightS12nFragment on OnDemandSpecializationsV1 {\n  name\n  id\n  slug\n  logo\n  courseIds\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  metadata {\n    headerImage\n    level\n    __typename\n  }\n  __typename\n}\n"},{"operationName":"CollectionQuery","variables":{"skip":False,"start":"0","contextId":"{}".format(name),"contextType":"SUBCATEGORY","numEntriesPerCollection":12,"limit":8},"query":"query CollectionQuery($contextType: String!, $contextId: String!, $skip: Boolean = false, $numEntriesPerCollection: Int, $limit: Int, $start: String = \"0\") {\n  BrowseCollectionsV1Resource @skip(if: $skip) {\n    byCollections(contextType: $contextType, contextId: $contextId, numEntriesPerCollection: $numEntriesPerCollection, limit: $limit, start: $start) {\n      elements {\n        label\n        id\n        linkedCollectionPageMetadata {\n          url\n          label\n          __typename\n        }\n        debug\n        entries {\n          id\n          courseId\n          onDemandSpecializationId\n          resourceName\n          score\n          __typename\n        }\n        courses {\n          elements {\n            ...LightweightCourseFragment\n            __typename\n          }\n          __typename\n        }\n        s12ns {\n          elements {\n            ...LightweightS12nFragment\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      paging {\n        total\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LightweightCourseFragment on CoursesV1 {\n  id\n  slug\n  name\n  photoUrl\n  s12nIds\n  level\n  workload\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightS12nFragment on OnDemandSpecializationsV1 {\n  name\n  id\n  slug\n  logo\n  courseIds\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  metadata {\n    headerImage\n    level\n    __typename\n  }\n  __typename\n}\n"}]
        # data = [{"operationName":"membershipQuery","variables":{"userId":"43215015"},"query":"query membershipQuery($userId: String!) {\n  ProgramMembershipsV2Resource {\n    byUser(userId: $userId) {\n      elements {\n        id\n        enterpriseProgram {\n          id\n          thirdPartyOrganizationId\n          browsingExperience {\n            id\n            browsingExperience\n            __typename\n          }\n          metadata {\n            slug\n            name\n            description\n            endedAt\n            launchedAt\n            curriculumId\n            __typename\n          }\n          __typename\n        }\n        membershipState\n        programId\n        createdAt\n        userId\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  DegreeLearnerMembershipsV1Resource {\n    byUser(userId: $userId) {\n      elements {\n        id\n        createdAt\n        degreeId\n        role\n        degree {\n          id\n          name\n          slug\n          internalLaunchType\n          supportEmailAddress\n          partnerIds\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  ProgramSwitcherSelectionsV1Resource {\n    get(id: $userId) {\n      id\n      selectionType\n      programId\n      degreeId\n      __typename\n    }\n    __typename\n  }\n}\n"},{"operationName":"catalogResultQuery","variables":{"skip":False,"limit":1,"facets":["skillNameMultiTag","jobTitleMultiTag","difficultyLevelTag","languages","entityTypeTag","partnerMultiTag","categoryMultiTag","subcategoryMultiTag:music-and-art"],"sortField":"","start":"0"},"query":"query catalogResultQuery($facets: [String!]!, $start: String!, $skip: Boolean = False, $sortField: String, $limit: Int) {\n  CatalogResultsV2Resource @skip(if: $skip) {\n    browseV2(facets: $facets, start: $start, limit: $limit, sortField: $sortField) {\n      elements {\n        label\n        entries {\n          id\n          score\n          courseId\n          specializationId\n          onDemandSpecializationId\n          resourceName\n          __typename\n        }\n        domainId\n        subdomainId\n        facets\n        courses {\n          elements {\n            ...FullCourseFragment\n            __typename\n          }\n          __typename\n        }\n        s12ns {\n          elements {\n            ...FullS12nFragment\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      paging {\n        total\n        next\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment FullCourseFragment on CoursesV1 {\n  ...LightweightCourseFragment\n  courseDerivativesV2 {\n    skillTags {\n      skillName\n      relevanceScore\n      __typename\n    }\n    avgLearningHoursAdjusted\n    commentCount\n    averageFiveStarRating\n    ratingCount\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightCourseFragment on CoursesV1 {\n  id\n  slug\n  name\n  photoUrl\n  s12nIds\n  level\n  workload\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment FullS12nFragment on OnDemandSpecializationsV1 {\n  ...LightweightS12nFragment\n  derivativeV2 {\n    averageFiveStarRating\n    avgLearningHoursAdjusted\n    __typename\n  }\n  courses {\n    elements {\n      courseDerivativesV2 {\n        skillTags {\n          skillName\n          relevanceScore\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightS12nFragment on OnDemandSpecializationsV1 {\n  name\n  id\n  slug\n  logo\n  courseIds\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  metadata {\n    headerImage\n    level\n    __typename\n  }\n  __typename\n}\n"},{"operationName":"CollectionQuery","variables":{"skip":False,"start":"0","contextId":"music-and-art","contextType":"SUBCATEGORY","numEntriesPerCollection":12,"limit":8},"query":"query CollectionQuery($contextType: String!, $contextId: String!, $skip: Boolean = False, $numEntriesPerCollection: Int, $limit: Int, $start: String = \"0\") {\n  BrowseCollectionsV1Resource @skip(if: $skip) {\n    byCollections(contextType: $contextType, contextId: $contextId, numEntriesPerCollection: $numEntriesPerCollection, limit: $limit, start: $start) {\n      elements {\n        label\n        id\n        linkedCollectionPageMetadata {\n          url\n          label\n          __typename\n        }\n        debug\n        entries {\n          id\n          courseId\n          onDemandSpecializationId\n          resourceName\n          score\n          __typename\n        }\n        courses {\n          elements {\n            ...LightweightCourseFragment\n            __typename\n          }\n          __typename\n        }\n        s12ns {\n          elements {\n            ...LightweightS12nFragment\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      paging {\n        total\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LightweightCourseFragment on CoursesV1 {\n  id\n  slug\n  name\n  photoUrl\n  s12nIds\n  level\n  workload\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightS12nFragment on OnDemandSpecializationsV1 {\n  name\n  id\n  slug\n  logo\n  courseIds\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  metadata {\n    headerImage\n    level\n    __typename\n  }\n  __typename\n}\n"},{"operationName":"CollectionQuery","variables":{"contextId":"music-and-art","contextType":"SUBCATEGORY","numEntriesPerCollection":12,"limit":8,"skip":False},"query":"query CollectionQuery($contextType: String!, $contextId: String!, $skip: Boolean = False, $numEntriesPerCollection: Int, $limit: Int, $start: String = \"0\") {\n  BrowseCollectionsV1Resource @skip(if: $skip) {\n    byCollections(contextType: $contextType, contextId: $contextId, numEntriesPerCollection: $numEntriesPerCollection, limit: $limit, start: $start) {\n      elements {\n        label\n        id\n        linkedCollectionPageMetadata {\n          url\n          label\n          __typename\n        }\n        debug\n        entries {\n          id\n          courseId\n          onDemandSpecializationId\n          resourceName\n          score\n          __typename\n        }\n        courses {\n          elements {\n            ...LightweightCourseFragment\n            __typename\n          }\n          __typename\n        }\n        s12ns {\n          elements {\n            ...LightweightS12nFragment\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      paging {\n        total\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LightweightCourseFragment on CoursesV1 {\n  id\n  slug\n  name\n  photoUrl\n  s12nIds\n  level\n  workload\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment LightweightS12nFragment on OnDemandSpecializationsV1 {\n  name\n  id\n  slug\n  logo\n  courseIds\n  partners {\n    elements {\n      name\n      squareLogo\n      classLogo\n      logo\n      __typename\n    }\n    __typename\n  }\n  metadata {\n    headerImage\n    level\n    __typename\n  }\n  __typename\n}\n"}]
        resp = requests.post(url,data=json.dumps(data),headers=header).text
        num = len(resp)

        resp_json = json.loads(resp)[1]


        data_list = resp_json.get("data").get("BrowseCollectionsV1Resource").get("byCollections").get("elements")


        filter_data = [ item for item in data_list if item.get("label") == '最热门课程'][0].get("courses").get('elements')


        for item in filter_data:
            try:
                slug_url = 'https://www.coursera.org/learn/'+item.get("slug")
                doc = pq(slug_url)
                name1 = doc("div.BreadCrumb_1olbr68-o_O-Breadcrumb_y6hf3w div").eq(1)('a').text()
                name2 = doc("div.BreadCrumb_1olbr68-o_O-Breadcrumb_y6hf3w div").eq(2)('a').text()
                Offered_By = doc('div.partnerBanner_np2ice-o_O-Box_120drhm-o_O-displayflex_poyjc div').eq(1)("img").attr('title')
                name_es = doc("h1.H2_1pmnvep-o_O-weightNormal_s9jwp5-o_O-fontHeadline_1uu0gyz.max-text-width-xl.m-b-1s").text()
                star  = doc('div.Box_120drhm-o_O-centerAlign_19zvu2s-o_O-displayflex_poyjc.CourseRating span').eq(0).text()
                enrolled = re.findall(re.compile(r'"totalEnrollmentCount":(.*?)}}'),str(doc))[0]
                about = doc("div.Row_nvwp6p.text-xs-left div.Col_i9j08c-o_O-xsCol12_1m1ceo5").text()
                content = doc('div.rc-TogglableContent.about-section.collapsed div.content-inner p').text()
                all_content = about+content
                Beginner = doc("div.ProductGlance div.Box_120drhm-o_O-displayflex_poyjc-o_O-columnDirection_ia4371").eq(-3).text()
                time_ = doc("div.ProductGlance div.Box_120drhm-o_O-displayflex_poyjc-o_O-columnDirection_ia4371").eq(-2).text()
                English = doc("div.ProductGlance div.Box_120drhm-o_O-displayflex_poyjc-o_O-columnDirection_ia4371").eq(-1).text()
                skill = doc("div.Skills.border-a.p-x-2.p-t-1.p-b-2.m-y-2").text()
                with open('all_coursera_results.csv','a',encoding='gb18030',newline='') as f:
                    writer = csv.writer(f)
                    writer.writerow((j,name1,name2,Offered_By,name_es,star,enrolled,all_content,Beginner,time_,English,skill,slug_url))
                print(name1,Offered_By,star,name_es,enrolled)
            except Exception as e:
                print(e)
